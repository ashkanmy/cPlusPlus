// Example program
#include <iostream>
#include <string>
#include<assert.h>
#include<stdexcept>

using std::cout;
using std::string;
using std::invalid_argument;

struct LineSegment
{
    public:
       int length__;
};

class Circle
{
    public:
       Circle(LineSegment& radius)
       {
           ValidateCircle(radius);
           radius_.length__ = radius.length__;
       }
       
       int Area() {return radius_.length__*radius_.length__*3.14;}
    private:
       LineSegment radius_;
       void ValidateCircle(LineSegment& radius)
       {
           if (radius.length__<=0)
           {
              cout << "negative radius";
              throw invalid_argument("negative radi!");
           }
       };
};

int main()
{
    LineSegment radius{-2};
    //cout << radius.length__ << "\n";
    
    bool caught{false};
    try{
        Circle circle(radius);
    }catch(...)
    {
        assert(caught==true);
    }
    //cout << circle.Area();
}
